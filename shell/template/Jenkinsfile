pipeline {
    agent any
    environment {
        HOME = "${env.WORKSPACE}"
        env_shell="play"
        project_param='--param param_api_image=erp:play'
    }
    stages {
        stage('init') {
            steps {
                sh 'pip3 install -r script/requirements.txt && \
                    python3 shell/run.py \
                    --env shell/${env_shell}/_env.py \
                    --log-file init.log \
                    ${project_param} \
                    --cmd \'from script.domain.source import java as java_source;java_source.ensure_network()\''
            }
        }
        stage('build_db') {
            steps {
                sh 'python3 shell/run.py \
                    --env shell/${env_shell}/_env.py \
                    --log-file build_db.log \
                    ${project_param} --skip-rm-output \
                    --cmd \'from script.domain.source import mysql as mysql_source;mysql_source.assemble()\''
            }
        }
        stage('build_api') {
            steps {
                sh 'python3 shell/run.py \
                    --env shell/${env_shell}/_env.py \
                    --log-file build_api.log \
                    ${project_param} --skip-rm-output \
                    --cmd \'from script.domain.source import java as java_source;java_source.build_plugin();java_source.build_api();java_source.build_api_compose()\''
            }
        }
        stage('build_web') {
            steps {
                sh 'python3 shell/run.py \
                    --env shell/${env_shell}/_env.py \
                    --log-file build_web.log \
                    ${project_param} --skip-rm-output \
                    --cmd \'from script.domain.source import web as web_source;web_source.build_web();web_source.build_cp_shell();web_source.build_nginx();\''
            }
        }
        stage('deploy') {
            steps {
                sh 'python3 shell/run.py \
                    --env shell/${env_shell}/_env.py \
                    --log-file deploy.log \
                    ${project_param} --skip-rm-output \
                    --cmd \'from script.domain.source import java as java_source,mysql as mysql_source;java_source.down_container();mysql_source.recreate();mysql_source.exec();java_source.start_api_compose()\'\
                    && sh ___output/tmp/nginx.sh'
            }
        }
    }
}
