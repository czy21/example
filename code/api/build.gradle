plugins {
    id 'org.springframework.boot' apply false
    id 'io.spring.dependency-management' apply false
}
ext {
    apacheCommonLang3Version = "3.12.0"
    apacheCommonPool2Version = "2.11.1"
    apacheCommonIOVersion = "2.11.0"
    apacheCommonsCollectionVersion = "4.4"
    apacheCommonValidatorVersion = "1.7"
    mapstructVersion = "1.4.2.Final"
    lombokMapstructBindingVersion = "0.2.0"
    clickhouseVersion = "0.3.1"
    redissonVersion = "3.16.4"
    minioVersion = "8.2.0"
    okhttpVersion = "4.9.3"
    mybatisPlusVersion = "3.5.0"
    easyExcelVersion = "3.0.5"
    micrometerJVMExtrasVersion = "0.2.2"
    micrometerRegistryPrometheusVersion = "1.8.2"
    pulsarVersion = "0.1.0-SNAPSHOT"
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'
    group = 'com.team'
    version = '0.1.0-SNAPSHOT'

    sourceCompatibility = "17"
    targetCompatibility = "17"

    tasks.withType(JavaCompile) {
        options.encoding('UTF-8')
    }


    dependencyManagement {
        generatedPomCustomization {
            enabled = false
        }
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }

        dependencies {
            dependency "org.apache.commons:commons-pool2:${apacheCommonPool2Version}"
            dependency "org.apache.commons:commons-lang3:${apacheCommonLang3Version}"
            dependency "commons-io:commons-io:${apacheCommonIOVersion}"
            dependency "org.apache.commons:commons-collections4:${apacheCommonsCollectionVersion}"
            dependency "commons-validator:commons-validator:${apacheCommonValidatorVersion}"
            dependency "org.mapstruct:mapstruct:${mapstructVersion}"
            dependency "org.mapstruct:mapstruct-processor:${mapstructVersion}"
            dependency "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
            dependency "ru.yandex.clickhouse:clickhouse-jdbc:${clickhouseVersion}"
            dependency("org.redisson:redisson-spring-boot-starter:${redissonVersion}") {
                exclude "org.springframework.boot:spring-boot-starter-web"
            }
            dependency "io.minio:minio:${minioVersion}"
            dependency "com.squareup.okhttp3:okhttp:${okhttpVersion}"
            dependency "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}"
            dependency "com.alibaba:easyexcel:${easyExcelVersion}"

            dependency "io.micrometer:micrometer-registry-prometheus:${micrometerRegistryPrometheusVersion}"
            dependency "io.github.mweirauch:micrometer-jvm-extras:${micrometerJVMExtrasVersion}"
            dependency "com.czy:pulsar-spring-boot-starter:${pulsarVersion}"
        }
    }

    dependencies {
        implementation "org.springframework.cloud:spring-cloud-starter-consul-config"
        implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
        implementation "io.github.openfeign:feign-jackson"

        implementation "org.apache.commons:commons-pool2"
        implementation "org.apache.commons:commons-lang3"
        implementation "org.apache.commons:commons-collections4"
        implementation "commons-io:commons-io"
        implementation "commons-validator:commons-validator"

        implementation "org.mapstruct:mapstruct", "org.projectlombok:lombok"
        annotationProcessor "org.mapstruct:mapstruct-processor", "org.projectlombok:lombok", "org.projectlombok:lombok-mapstruct-binding"
        testImplementation "org.mapstruct:mapstruct", "org.projectlombok:lombok"
        testAnnotationProcessor "org.mapstruct:mapstruct-processor", "org.projectlombok:lombok", "org.projectlombok:lombok-mapstruct-binding"

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        implementation "org.springframework.boot:spring-boot-starter-actuator"
        implementation "io.micrometer:micrometer-registry-prometheus"
        implementation "io.github.mweirauch:micrometer-jvm-extras"

        testImplementation "org.springframework.boot:spring-boot-starter-test"
    }

    test {
        useJUnitPlatform()
    }

    jar {
        into("META-INF/maven/${project.group}/${project.name}") {
            from { generatePomFileForMavenJavaPublication }
            rename ".*", "pom.xml"
        }

        afterEvaluate {
            manifest {
                attributes 'Implementation-Title': archiveBaseName
                attributes 'Implementation-Version': archiveVersion
                attributes 'Built-Gradle': gradle.gradleVersion
                attributes 'Build-OS': System.getProperty("os.name")
                attributes 'Built-By': System.getProperty("user.name")
                attributes 'Build-Jdk': System.getProperty("java.version")
                attributes 'Build-Time': LocalDateTime.now().format("yyyy-MM-dd HH:mm:ss")
            }
        }
    }

    java {
        withSourcesJar()
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
    }
}