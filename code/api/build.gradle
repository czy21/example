plugins {
    id 'org.springframework.boot' apply false
    id 'io.spring.dependency-management' apply false
}
ext {
    clickhouseVersion = "0.3.1"
    okhttpVersion = "4.9.3"
    pulsarVersion = "0.1.0-SNAPSHOT"
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'
    group = 'com.team'
    version = '0.1.0-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    tasks.withType(JavaCompile) {
        options.encoding('UTF-8')
    }

    dependencyManagement {
        generatedPomCustomization {
            enabled = false
        }
        imports {
            mavenBom "com.czy:learning-spring-bom:0.1.0-SNAPSHOT"
        }

        dependencies {
            dependency "ru.yandex.clickhouse:clickhouse-jdbc:${clickhouseVersion}"
            dependency "com.squareup.okhttp3:okhttp:${okhttpVersion}"
            dependency "com.czy:pulsar-spring-boot-starter:${pulsarVersion}"
        }
    }

    dependencies {
        implementation "org.springframework.cloud:spring-cloud-starter-consul-config"

        implementation "org.apache.commons:commons-pool2"
        implementation "org.apache.commons:commons-lang3"
        implementation "org.apache.commons:commons-collections4"
        implementation "commons-io:commons-io"
        implementation "commons-validator:commons-validator"

        implementation "org.mapstruct:mapstruct", "org.projectlombok:lombok"
        annotationProcessor "org.mapstruct:mapstruct-processor", "org.projectlombok:lombok", "org.projectlombok:lombok-mapstruct-binding"
        testImplementation "org.mapstruct:mapstruct", "org.projectlombok:lombok"
        testAnnotationProcessor "org.mapstruct:mapstruct-processor", "org.projectlombok:lombok", "org.projectlombok:lombok-mapstruct-binding"

        testImplementation "org.springframework.boot:spring-boot-starter-test"
    }

    test {
        useJUnitPlatform()
    }

    jar {
        into("META-INF/maven/${project.group}/${project.name}") {
            from { generatePomFileForMavenJavaPublication }
            rename ".*", "pom.xml"
        }

        afterEvaluate {
            manifest {
                attributes 'Implementation-Title': archiveBaseName
                attributes 'Implementation-Version': archiveVersion
                attributes 'Built-Gradle': gradle.gradleVersion
                attributes 'Build-OS': System.getProperty("os.name")
                attributes 'Built-By': System.getProperty("user.name")
                attributes 'Build-Jdk': System.getProperty("java.version")
                attributes 'Build-Time': LocalDateTime.now().format("yyyy-MM-dd HH:mm:ss")
            }
        }
    }

    java {
        withSourcesJar()
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
    }
}
